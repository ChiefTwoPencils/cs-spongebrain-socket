<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_05) on Thu Dec 18 19:08:23 PST 2014 -->
<title>AbstractBinaryTree</title>
<meta name="date" content="2014-12-18">
<link rel="stylesheet" type="text/css" href="../../../stylesheet.css" title="Style">
<script type="text/javascript" src="../../../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="AbstractBinaryTree";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/AbstractBinaryTree.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-files/index-1.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev&nbsp;Class</li>
<li><a href="../../../cs/assignments/trees/AbstractTree.html" title="class in cs.assignments.trees"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../index.html?cs/assignments/trees/AbstractBinaryTree.html" target="_top">Frames</a></li>
<li><a href="AbstractBinaryTree.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">cs.assignments.trees</div>
<h2 title="Class AbstractBinaryTree" class="title">Class AbstractBinaryTree&lt;K extends java.lang.Comparable&lt;K&gt;,V&gt;</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>cs.assignments.trees.AbstractBinaryTree&lt;K,V&gt;</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt><span class="paramLabel">Type Parameters:</span></dt>
<dd><code>K</code> - Key type.</dd>
<dd><code>V</code> - Value type.</dd>
</dl>
<dl>
<dt>All Implemented Interfaces:</dt>
<dd><a href="../../../cs/assignments/trees/Tree.html" title="interface in cs.assignments.trees">Tree</a>&lt;K,V&gt;</dd>
</dl>
<dl>
<dt>Direct Known Subclasses:</dt>
<dd><a href="../../../cs/assignments/trees/BinarySearchTree.html" title="class in cs.assignments.trees">BinarySearchTree</a>, <a href="../../../cs/assignments/trees/RedBlackTree.html" title="class in cs.assignments.trees">RedBlackTree</a></dd>
</dl>
<hr>
<br>
<pre>public abstract class <span class="typeNameLabel">AbstractBinaryTree&lt;K extends java.lang.Comparable&lt;K&gt;,V&gt;</span>
extends java.lang.Object
implements <a href="../../../cs/assignments/trees/Tree.html" title="interface in cs.assignments.trees">Tree</a>&lt;K,V&gt;</pre>
<div class="block">This source file is the base class for all binary trees.</div>
<dl>
<dt><span class="simpleTagLabel">Author:</span></dt>
<dd>Robert Wilk</dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../../../cs/assignments/trees/AbstractBinaryTree.html#AbstractBinaryTree--">AbstractBinaryTree</a></span>()</code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../cs/assignments/trees/AbstractBinaryTree.html#contains-cs.assignments.trees.BinaryNode-K-">contains</a></span>(<a href="../../../cs/assignments/trees/BinaryNode.html" title="class in cs.assignments.trees">BinaryNode</a>&lt;<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">K</a>,<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">V</a>&gt;&nbsp;root,
        <a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">K</a>&nbsp;key)</code>
<div class="block">This determines if the tree contains the given key.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>protected <a href="../../../cs/assignments/trees/BinaryNode.html" title="class in cs.assignments.trees">BinaryNode</a>&lt;<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">K</a>,<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">V</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../cs/assignments/trees/AbstractBinaryTree.html#find-cs.assignments.trees.BinaryNode-K-">find</a></span>(<a href="../../../cs/assignments/trees/BinaryNode.html" title="class in cs.assignments.trees">BinaryNode</a>&lt;<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">K</a>,<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">V</a>&gt;&nbsp;root,
    <a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">K</a>&nbsp;key)</code>
<div class="block">Finds the node through key comparison and returns it, if possible.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>protected <a href="../../../cs/assignments/trees/BinaryNode.html" title="class in cs.assignments.trees">BinaryNode</a>&lt;<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">K</a>,<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">V</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../cs/assignments/trees/AbstractBinaryTree.html#max-cs.assignments.trees.BinaryNode-">max</a></span>(<a href="../../../cs/assignments/trees/BinaryNode.html" title="class in cs.assignments.trees">BinaryNode</a>&lt;<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">K</a>,<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">V</a>&gt;&nbsp;root)</code>
<div class="block">Finds the largest key in the tree.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>protected <a href="../../../cs/assignments/trees/BinaryNode.html" title="class in cs.assignments.trees">BinaryNode</a>&lt;<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">K</a>,<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">V</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../cs/assignments/trees/AbstractBinaryTree.html#min-cs.assignments.trees.BinaryNode-">min</a></span>(<a href="../../../cs/assignments/trees/BinaryNode.html" title="class in cs.assignments.trees">BinaryNode</a>&lt;<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">K</a>,<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">V</a>&gt;&nbsp;root)</code>
<div class="block">Finds the smallest key in the tree.</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>protected void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../cs/assignments/trees/AbstractBinaryTree.html#traverseInOrder-cs.assignments.trees.BinaryNode-java.util.List-">traverseInOrder</a></span>(<a href="../../../cs/assignments/trees/BinaryNode.html" title="class in cs.assignments.trees">BinaryNode</a>&lt;<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">K</a>,<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">V</a>&gt;&nbsp;root,
               java.util.List&lt;<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">V</a>&gt;&nbsp;values)</code>
<div class="block">Recursively adds the elements of the tree into a list
 in-order - Left-Root-Right.</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>protected void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../cs/assignments/trees/AbstractBinaryTree.html#traversePostOrder-cs.assignments.trees.BinaryNode-java.util.List-">traversePostOrder</a></span>(<a href="../../../cs/assignments/trees/BinaryNode.html" title="class in cs.assignments.trees">BinaryNode</a>&lt;<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">K</a>,<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">V</a>&gt;&nbsp;root,
                 java.util.List&lt;<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">V</a>&gt;&nbsp;values)</code>
<div class="block">Recursively adds the elements of the tree in
 post-order - Left-Right-Root.</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>protected void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../cs/assignments/trees/AbstractBinaryTree.html#traversePreOrder-cs.assignments.trees.BinaryNode-java.util.List-">traversePreOrder</a></span>(<a href="../../../cs/assignments/trees/BinaryNode.html" title="class in cs.assignments.trees">BinaryNode</a>&lt;<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">K</a>,<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">V</a>&gt;&nbsp;root,
                java.util.List&lt;<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">V</a>&gt;&nbsp;values)</code>
<div class="block">Recursively adds the elements of the tree into a list
 in pre-order - Root - Left - Right.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.cs.assignments.trees.Tree">
<!--   -->
</a>
<h3>Methods inherited from interface&nbsp;cs.assignments.trees.<a href="../../../cs/assignments/trees/Tree.html" title="interface in cs.assignments.trees">Tree</a></h3>
<code><a href="../../../cs/assignments/trees/Tree.html#contains-K-">contains</a>, <a href="../../../cs/assignments/trees/Tree.html#get-K-">get</a>, <a href="../../../cs/assignments/trees/Tree.html#insert-K-V-">insert</a>, <a href="../../../cs/assignments/trees/Tree.html#remove-K-">remove</a>, <a href="../../../cs/assignments/trees/Tree.html#traverseInOrder--">traverseInOrder</a>, <a href="../../../cs/assignments/trees/Tree.html#traversePostOrder--">traversePostOrder</a>, <a href="../../../cs/assignments/trees/Tree.html#traversePreOrder--">traversePreOrder</a></code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="AbstractBinaryTree--">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>AbstractBinaryTree</h4>
<pre>public&nbsp;AbstractBinaryTree()</pre>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="contains-cs.assignments.trees.BinaryNode-java.lang.Comparable-">
<!--   -->
</a><a name="contains-cs.assignments.trees.BinaryNode-K-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>contains</h4>
<pre>public&nbsp;boolean&nbsp;contains(<a href="../../../cs/assignments/trees/BinaryNode.html" title="class in cs.assignments.trees">BinaryNode</a>&lt;<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">K</a>,<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">V</a>&gt;&nbsp;root,
                        <a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">K</a>&nbsp;key)</pre>
<div class="block">This determines if the tree contains the given key.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>root</code> - The root of the current sub-tree.</dd>
<dd><code>key</code> - The search key.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Whether the tree contains the key or not.</dd>
</dl>
</li>
</ul>
<a name="find-cs.assignments.trees.BinaryNode-java.lang.Comparable-">
<!--   -->
</a><a name="find-cs.assignments.trees.BinaryNode-K-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>find</h4>
<pre>protected&nbsp;<a href="../../../cs/assignments/trees/BinaryNode.html" title="class in cs.assignments.trees">BinaryNode</a>&lt;<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">K</a>,<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">V</a>&gt;&nbsp;find(<a href="../../../cs/assignments/trees/BinaryNode.html" title="class in cs.assignments.trees">BinaryNode</a>&lt;<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">K</a>,<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">V</a>&gt;&nbsp;root,
                               <a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">K</a>&nbsp;key)</pre>
<div class="block">Finds the node through key comparison and returns it, if possible.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>root</code> - The root of the current sub-tree.</dd>
<dd><code>key</code> - The search key.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The node with the key if found or null.</dd>
</dl>
</li>
</ul>
<a name="max-cs.assignments.trees.BinaryNode-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>max</h4>
<pre>protected&nbsp;<a href="../../../cs/assignments/trees/BinaryNode.html" title="class in cs.assignments.trees">BinaryNode</a>&lt;<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">K</a>,<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">V</a>&gt;&nbsp;max(<a href="../../../cs/assignments/trees/BinaryNode.html" title="class in cs.assignments.trees">BinaryNode</a>&lt;<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">K</a>,<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">V</a>&gt;&nbsp;root)</pre>
<div class="block">Finds the largest key in the tree.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>root</code> - The root of the current sub-tree</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The node mapped to the largest key or null.</dd>
</dl>
</li>
</ul>
<a name="min-cs.assignments.trees.BinaryNode-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>min</h4>
<pre>protected&nbsp;<a href="../../../cs/assignments/trees/BinaryNode.html" title="class in cs.assignments.trees">BinaryNode</a>&lt;<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">K</a>,<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">V</a>&gt;&nbsp;min(<a href="../../../cs/assignments/trees/BinaryNode.html" title="class in cs.assignments.trees">BinaryNode</a>&lt;<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">K</a>,<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">V</a>&gt;&nbsp;root)</pre>
<div class="block">Finds the smallest key in the tree.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>root</code> - The root of the current sub-tree.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The node mapped to the smallest key or null.</dd>
</dl>
</li>
</ul>
<a name="traversePreOrder-cs.assignments.trees.BinaryNode-java.util.List-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>traversePreOrder</h4>
<pre>protected&nbsp;void&nbsp;traversePreOrder(<a href="../../../cs/assignments/trees/BinaryNode.html" title="class in cs.assignments.trees">BinaryNode</a>&lt;<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">K</a>,<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">V</a>&gt;&nbsp;root,
                                java.util.List&lt;<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">V</a>&gt;&nbsp;values)</pre>
<div class="block">Recursively adds the elements of the tree into a list
 in pre-order - Root - Left - Right.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>root</code> - The root of the current sub-tree.</dd>
<dd><code>values</code> - List of node values in pre-order.</dd>
</dl>
</li>
</ul>
<a name="traverseInOrder-cs.assignments.trees.BinaryNode-java.util.List-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>traverseInOrder</h4>
<pre>protected&nbsp;void&nbsp;traverseInOrder(<a href="../../../cs/assignments/trees/BinaryNode.html" title="class in cs.assignments.trees">BinaryNode</a>&lt;<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">K</a>,<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">V</a>&gt;&nbsp;root,
                               java.util.List&lt;<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">V</a>&gt;&nbsp;values)</pre>
<div class="block">Recursively adds the elements of the tree into a list
 in-order - Left-Root-Right.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>root</code> - The root of the current subtree.</dd>
<dd><code>values</code> - The list of node values.</dd>
</dl>
</li>
</ul>
<a name="traversePostOrder-cs.assignments.trees.BinaryNode-java.util.List-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>traversePostOrder</h4>
<pre>protected&nbsp;void&nbsp;traversePostOrder(<a href="../../../cs/assignments/trees/BinaryNode.html" title="class in cs.assignments.trees">BinaryNode</a>&lt;<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">K</a>,<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">V</a>&gt;&nbsp;root,
                                 java.util.List&lt;<a href="../../../cs/assignments/trees/AbstractBinaryTree.html" title="type parameter in AbstractBinaryTree">V</a>&gt;&nbsp;values)</pre>
<div class="block">Recursively adds the elements of the tree in
 post-order - Left-Right-Root.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>root</code> - The root of the current subtree.</dd>
<dd><code>values</code> - The list of node values.</dd>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/AbstractBinaryTree.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-files/index-1.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev&nbsp;Class</li>
<li><a href="../../../cs/assignments/trees/AbstractTree.html" title="class in cs.assignments.trees"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../index.html?cs/assignments/trees/AbstractBinaryTree.html" target="_top">Frames</a></li>
<li><a href="AbstractBinaryTree.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
